# Generated by Django 5.2.4 on 2025-08-11 13:21

import django.db.models.deletion
import uuid
from django.db import migrations, models


def populate_cell_uuids(apps, schema_editor):
    Cell = apps.get_model("users", "Cell")
    for cell in Cell.objects.filter(uuid__isnull=True):
        cell.uuid = uuid.uuid4()
        cell.save(update_fields=["uuid"])


class Migration(migrations.Migration):

    dependencies = [
        ("users", "0008_loginotp_is_verified_passwordresetotp_is_verified"),
    ]

    operations = [
        migrations.AddField(
            model_name="cell",
            name="planned_crop",
            field=models.ForeignKey(
                blank=True,
                help_text="Crop planned for this season in this cell",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="planned_cells",
                to="users.product",
            ),
        ),
        migrations.AddField(
            model_name="cell",
            name="planned_livestock",
            field=models.CharField(
                blank=True,
                help_text="Optional planned livestock type for the season",
                max_length=100,
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="cell",
            name="season",
            field=models.CharField(
                blank=True,
                choices=[("A", "Season A"), ("B", "Season B"), ("C", "Season C")],
                help_text="Automatically set based on current month",
                max_length=1,
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="cell",
            name="season_year",
            field=models.PositiveIntegerField(default=2025),
        ),
        # Step 1: Add nullable uuid (no unique constraint yet)
        migrations.AddField(
            model_name="cell",
            name="uuid",
            field=models.UUIDField(default=None, null=True, editable=False),
        ),
        # Step 2: Populate UUIDs for existing rows
        migrations.RunPython(populate_cell_uuids, migrations.RunPython.noop),
        # Step 3: Alter field to enforce unique & default for new rows
        migrations.AlterField(
            model_name="cell",
            name="uuid",
            field=models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
        ),
    ]
